using System.Drawing;
using System.IO.Compression;
using System.Text.RegularExpressions;
using webapi.Models.ProjectReport;

namespace webapi.ProjectSearch.Services
{
    public class PentestTeamExtractor
    {
        private ZipArchiveEntry pentestTeamEntry;
        Dictionary<string, ProjectInformationParticipant> pentestTeamDictionary;

        public PentestTeamExtractor(ZipArchiveEntry pentestTeamEntry) 
        { 
            this.pentestTeamEntry = pentestTeamEntry;
            pentestTeamDictionary = new Dictionary<string, ProjectInformationParticipant>();
        }

        public Dictionary<string, ProjectInformationParticipant> extractPentestTeam()
        {
            char[] lineDelimiters = { '{', '}' };
            char bracketDelimiters = '&';
            bool pentestOrgCodes = false;
            string line;
            if(pentestTeamEntry == null)
            {
                throw new ArgumentNullException();
            } else
            {
                using(StreamReader reader = new StreamReader(pentestTeamEntry.Open()))
                {
                    while((line = reader.ReadLine()) != null)
                    {
                        if(!string.IsNullOrEmpty(line))
                        {
                            string trimmedLine = line.Trim();
                            string firstTwoChars = trimmedLine[0].ToString() + trimmedLine[1];
                            if ((trimmedLine[0] == '\\' || firstTwoChars == "%%"))
                            { 

                                if (trimmedLine[0] == '\\')
                                {
                                    if (pentestOrgCodes)
                                    {
                                        string[] inLineContents = trimmedLine.Split(lineDelimiters, StringSplitOptions.RemoveEmptyEntries);
                                        if (inLineContents.Length == 3)
                                        {
                                            foreach (ProjectInformationParticipant participant in pentestTeamDictionary.Values)
                                            {
                                                if (participant != null && participant.Department == inLineContents[1])
                                                {
                                                    participant.Department = extractDepartment(inLineContents[2]);
                                                }
                                            }
                                        } else
                                        {
                                            pentestOrgCodes = false;
                                        }

                                    }
                                    else
                                    {
                                        string[] inLineContents = trimmedLine.Split(lineDelimiters, StringSplitOptions.RemoveEmptyEntries);
                                        if (inLineContents.Length == 5)
                                        {
                                            if (inLineContents[0] == "\\newcommand")
                                            {
                                                if (!pentestTeamDictionary.ContainsKey(inLineContents[1]))
                                                {
                                                    string[] inBracketContents = ((inLineContents[2].Substring(0, inLineContents[2].Length - 5) + inLineContents[3]).Split(
                                                        bracketDelimiters, StringSplitOptions.RemoveEmptyEntries)); 
                                                    ProjectInformationParticipant newParticipant = new ProjectInformationParticipant();
                                                    newParticipant.Name = inBracketContents[0].Trim();
                                                    newParticipant.Department = inBracketContents[1].Trim();
                                                    newParticipant.Contact = extractContact(inBracketContents[2].Trim());
                                                    pentestTeamDictionary.Add(inLineContents[1], newParticipant);
                                                }
                                            }
                                        }
                                    }
                                }
                                else if (firstTwoChars == "%%")
                                {
                                    string str = Regex.Replace(line.Trim(), @"\s+", "");
                                    if (str == "%%PentestORGCodes")
                                    {
                                        pentestOrgCodes = true;
                                    }
                                }
                            }
                        }  
                    }
                }
            }
            return pentestTeamDictionary;
        }

        private string extractDepartment(string data)
        {
            string result = "";
            string delimiter = "\\";
            string[] editedString = data.Split(delimiter, StringSplitOptions.RemoveEmptyEntries);
            foreach (string str in editedString)
            {
                result += str;
            }

            return result;
        }

        private string extractContact(string data)
        {
            return data.Substring(9);
        }

    }
}
